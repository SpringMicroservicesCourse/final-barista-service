order.barista-prefix=springbucks-

server.port=8070

spring.output.ansi.enabled=ALWAYS

management.zipkin.tracing.endpoint=http://zipkin-final-spring-course:9411/api/v2/spans
agement.tracing.sampling.probabilityman=1.0
management.zipkin.tracing.sender.type=rabbit

logging.pattern.level=%5p [${spring.zipkin.service.name:${spring.application.name:}},%X{traceId:-},%X{spanId:-}]

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.datasource.url=jdbc:mariadb://mariadb-final-spring-course:3306/springbucks
spring.datasource.username=springbucks
spring.datasource.password=springbucks
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.rabbitmq.host=rabbitmq-final-spring-course
spring.rabbitmq.port=5672
spring.rabbitmq.username=spring
spring.rabbitmq.password=spring

# Spring Cloud Stream 函數式編程模型配置
spring.cloud.function.definition=newOrders
spring.cloud.stream.bindings.newOrders-in-0.destination=newOrders
spring.cloud.stream.bindings.newOrders-in-0.group=barista-service
spring.cloud.stream.rabbit.bindings.newOrders-in-0.consumer.durable-subscription=true

# 輸出綁定配置
spring.cloud.stream.bindings.finishedOrders-out-0.destination=finishedOrders
spring.cloud.stream.rabbit.bindings.finishedOrders-out-0.producer.delivery-mode=persistent

# 自定義配置屬性 - 綁定名稱（用於 StreamBridge.send）
stream.bindings.finished-orders-binding=finishedOrders-out-0

# 確保 Exchange 名稱正確
spring.cloud.stream.rabbit.bindings.newOrders-in-0.consumer.exchange-name=newOrders
spring.cloud.stream.rabbit.bindings.finishedOrders-out-0.producer.exchange-name=finishedOrders

# RabbitMQ Routing Key 配置
spring.cloud.stream.rabbit.bindings.finishedOrders-out-0.producer.routing-key=finished.orders
spring.cloud.stream.rabbit.bindings.finishedOrders-out-0.producer.exchange-type=topic